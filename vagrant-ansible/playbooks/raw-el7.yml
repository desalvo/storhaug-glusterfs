---
- hosts: all
  name: Raw Installation (RedHat)
  become: yes
  gather_facts: True

  tasks:
    - name: Pause to allow vagrant to finish...
      pause: seconds=5

    - name: Check if offline
      set_fact:
        cache_flag: >-
          {% if offline is defined and offline %}-C{% endif %}

    - name: Generate distro cache path
      set_fact:
        cache_dir: >-
          {%- set distro = ansible_distribution + "/" + ansible_distribution_major_version -%}
          {{ vagrant_home }}/cache/{{ distro }}

    - name: Make sure yum cache dir exist
      local_action:
        module: file
        path: "{{ cache_dir }}/yum"
        state: directory
      become: no

    - name: Push yum cache
      synchronize: "src={{ cache_dir }}/yum dest=/var/cache"

    - name: Make sure playbook dependencies are installed
      raw: >
        for REPO in `find /shared/playbooks -name '*.repo'`; do
          cp $REPO /etc/yum.repos.d/;
        done;
        sed -i "s/keepcache=0/keepcache=1/" /etc/yum.conf;
        yum {{ cache_flag }} install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ el_ver }}.noarch.rpm;
        yum {{ cache_flag }} install -y centos-release-gluster;
        yum {{ cache_flag }} install -y --enablerepo=centos-gluster38-test {{ install_pkgs }};
#        rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ el_ver }};
#        cd /etc/yum.repos.d/;
#        curl -O http://download.gluster.org/pub/gluster/glusterfs/LATEST/EPEL.repo/glusterfs-epel.repo;
#        curl -O http://download.gluster.org/pub/gluster/glusterfs/nfs-ganesha/2.3.2/EPEL.repo/nfs-ganesha.repo;
#        curl -O http://download.gluster.org/pub/gluster/glusterfs/samba/EPEL.repo/glusterfs-samba-epel.repo;
#        rpm --import http://download.gluster.org/pub/gluster/glusterfs/samba/EPEL.repo/pub.key;
#        rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ el_ver }};
#        yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ el_ver }}.noarch.rpm; 

    - name: Pull yum cache
      synchronize: "mode=pull dest={{ cache_dir }} src=/var/cache/yum"
      run_once: True

    - name: Push hosts file
      template: src={{item.src}} dest={{item.dest}} owner=root group=root mode=0644
      with_items:
        - { src: 'files/hosts.j2', dest: '/etc/hosts' }
